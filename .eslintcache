[{"/home/e-tech/Documents/pwa-app/src/index.js":"1","/home/e-tech/Documents/pwa-app/src/reportWebVitals.js":"2","/home/e-tech/Documents/pwa-app/src/redux/store/store.js":"3","/home/e-tech/Documents/pwa-app/src/Home.js":"4","/home/e-tech/Documents/pwa-app/src/redux/reducers/rootReducer.js":"5","/home/e-tech/Documents/pwa-app/src/components/Comment.js":"6","/home/e-tech/Documents/pwa-app/src/redux/actions/actions.js":"7","/home/e-tech/Documents/pwa-app/src/redux/saga/imageSaga.js":"8","/home/e-tech/Documents/pwa-app/src/redux/reducers/listPostReducer.js":"9","/home/e-tech/Documents/pwa-app/src/services/api.js":"10","/home/e-tech/Documents/pwa-app/src/AddPicture.js":"11","/home/e-tech/Documents/pwa-app/src/components/MenuBar.js":"12","/home/e-tech/Documents/pwa-app/src/components/Posts.js":"13","/home/e-tech/Documents/pwa-app/src/redux/reducers/imagesReducer.js":"14","/home/e-tech/Documents/pwa-app/src/redux/saga/listPostSaga.js":"15","/home/e-tech/Documents/pwa-app/src/redux/saga/rootSaga.js":"16","/home/e-tech/Documents/pwa-app/src/components/Camera.js":"17","/home/e-tech/Documents/pwa-app/src/redux/saga/addPostSaga.js":"18"},{"size":898,"mtime":1606114890823,"results":"19","hashOfConfig":"20"},{"size":364,"mtime":1606113991760,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1605768342881,"results":"22","hashOfConfig":"20"},{"size":4618,"mtime":1605873510832,"results":"23","hashOfConfig":"20"},{"size":347,"mtime":1605766688924,"results":"24","hashOfConfig":"20"},{"size":1813,"mtime":1605689364380,"results":"25","hashOfConfig":"20"},{"size":684,"mtime":1605766457472,"results":"26","hashOfConfig":"20"},{"size":743,"mtime":1605868285197,"results":"27","hashOfConfig":"20"},{"size":913,"mtime":1605792597685,"results":"28","hashOfConfig":"20"},{"size":63,"mtime":1605875522485,"results":"29","hashOfConfig":"20"},{"size":3395,"mtime":1605875758830,"results":"30","hashOfConfig":"20"},{"size":1211,"mtime":1605839269404,"results":"31","hashOfConfig":"20"},{"size":1031,"mtime":1605866861379,"results":"32","hashOfConfig":"20"},{"size":889,"mtime":1605777974518,"results":"33","hashOfConfig":"20"},{"size":766,"mtime":1605868291609,"results":"34","hashOfConfig":"20"},{"size":325,"mtime":1605768806174,"results":"35","hashOfConfig":"20"},{"size":1651,"mtime":1605875965951,"results":"36","hashOfConfig":"20"},{"size":1024,"mtime":1605871115684,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1t13cs1",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/e-tech/Documents/pwa-app/src/index.js",[],["78","79"],"/home/e-tech/Documents/pwa-app/src/reportWebVitals.js",[],["80","81"],"/home/e-tech/Documents/pwa-app/src/redux/store/store.js",[],"/home/e-tech/Documents/pwa-app/src/Home.js",["82","83","84","85","86","87","88"],"import React, { useEffect, useState } from \"react\";\nimport MenuBar from \"../src/components/MenuBar\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PostsList from \"../src/components/Posts\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {\n  PostListRequest,\n  ImageRequest,\n  PostRequest,\n} from \"../src/redux/actions/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    textAlign: \"center\",\n  },\n  postdata: {\n    boxShadow:\n      \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    padding: \"6px\",\n    // margin: \"16px\",\n    width: \"90%\",\n    marginTop: \"16px\",\n    minHeight: \"100px\",\n  },\n  addNewImage: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    marginTop: \"16px\",\n    marginRight: \"16px\",\n  },\n  Pagination: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    marginTop: \"8px\",\n    marginRight: \"8px\",\n  },\n}));\n\nconst Home = (props) => {\n  const dispatch = useDispatch();\n  const allPostList = useSelector((state) => state.PostListstatus);\n  const imageUrl = useSelector((state) => state.Imagestatus);\n  const postDataStatus = useSelector((state) => state.AddPoststatus);\n  const [offlineError, setOfflineError] = useState(\"\");\n  const [data, setData] = useState();\n\n  const [page, setPage] = useState(1);\n  const classes = useStyles();\n\n  const handleAddPicture = () => {\n    // const offlinePosts = JSON.parse(localStorage.getItem(\"newPost\"));\n    // console.log(!offlinePosts || offlinePosts?.length > 3);\n    // if (!offlinePosts || offlinePosts?.length > 3) {\n      props.history.push(\"/addpicture\");\n    // }\n    // if (offlinePosts?.length < 3) {\n    //   setOfflineError(\"No more posts can be added\");\n    // }\n  };\n  const isOnline = navigator.onLine;\n\n  useEffect(() => {\n    let newPosts = JSON.parse(localStorage.getItem(\"newPost\"));\n    newPosts?.map(async(val) => {\n      await dispatch(PostRequest(val));\n    });\n\n    if (localStorage.getItem(\"post\")) {\n      const allPosts = JSON.parse(localStorage.getItem(\"post\"));\n      setData(allPosts);\n    }\n    dispatch(PostListRequest(page));\n\n  }, []);\n\n  useEffect(async () => {\n    if (imageUrl?.data && allPostList&&allPostList?.data?.length && isOnline) {\n      const filteredArray = await Promise.all(\n        allPostList.data.map((val) => {\n          const imageArray = imageUrl?.data.find((el) => {\n            return el._id == val._id;\n          });\n          val[\"image\"] = imageArray?.imageName ? imageArray.imageName : \"\";\n          return val;\n        })\n      );\n\n      if (filteredArray.length) {\n        setData(filteredArray);\n        localStorage.setItem(\"post\", JSON.stringify(filteredArray));\n      }\n    }\n  }, [imageUrl?.data.length]);\n\n  useEffect(async () => {\n    if (allPostList&&allPostList?.data && isOnline && !postDataStatus.isLoading) {\n      if(allPostList&& allPostList?.data?.length){\n     allPostList.data.map(async (allpost) => {\n        await dispatch(ImageRequest(allpost._id));\n      });\n      }\n  \n    }\n  }, [allPostList.data]);\n\n  const handlePagination = (event, val) => {\n    dispatch(PostListRequest(val));\n    setPage(val);\n  };\n\n  return (\n    <div>\n      <MenuBar />\n      {!navigator.onLine ? (\n        <div>\n          <Alert severity='warning'>\n            You are in offline mode!! {offlineError}\n          </Alert>\n        </div>\n      ) : null}\n      <Grid\n        direction='row'\n        justify='space-around'\n        alignItems='center'\n        container\n      >\n        {data?.map((post, i) => {\n          return (\n            <Grid\n              item\n              className={classes.postdata}\n              xs={12}\n              sm={5}\n              md={5}\n              key={i}\n            >\n              <PostsList\n                key={i}\n                source={post.image || post.file}\n                comment={post.comment}\n              />\n            </Grid>\n          );\n        })}\n      </Grid>\n      <div className={classes.Pagination}>\n        <Pagination\n          count={allPostList?.totalpages}\n          color='primary'\n          page={page}\n          onChange={handlePagination}\n        />\n      </div>\n      <div className={classes.addNewImage}>\n        <Fab color='primary'>\n          <AddIcon fontSize='large' onClick={handleAddPicture} />\n        </Fab>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/home/e-tech/Documents/pwa-app/src/redux/reducers/rootReducer.js",[],"/home/e-tech/Documents/pwa-app/src/components/Comment.js",[],"/home/e-tech/Documents/pwa-app/src/redux/actions/actions.js",[],"/home/e-tech/Documents/pwa-app/src/redux/saga/imageSaga.js",[],"/home/e-tech/Documents/pwa-app/src/redux/reducers/listPostReducer.js",[],"/home/e-tech/Documents/pwa-app/src/services/api.js",[],"/home/e-tech/Documents/pwa-app/src/AddPicture.js",["89","90"],"import React, { useEffect, useState } from \"react\";\nimport MenuBar from \"./components/MenuBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Comment from \"./components/Comment\";\nimport Camera from \"./components/Camera\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PostRequest } from \"../src/redux/actions/actions\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    textAlign: \"center\",\n  },\n  imgBox: {\n    maxWidth: \"80%\",\n    maxHeight: \"80%\",\n    margin: \"10px\",\n    border: \"none\",\n  },\n  img: {\n    height: \"inherit\",\n    maxWidth: \"inherit\",\n  },\n  input: {\n    display: \"none\",\n  },\n  postdata: {\n    boxShadow:\n      \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    border: \"1px soild red\",\n    padding: \"6px\",\n  },\n}));\n\nconst Home = (props) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [source, setSource] = useState();\n  const [openCommentModal, setOpenCommentModal] = useState(false);\n  const [saveComment, setSaveComment] = useState(\"\");\n  const [postData, setPostData] = useState([]);\n\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true })\n      .then(gotMedia)\n      .catch((error) => \n      console.error(\"getUserMedia() error:\"\n      , error));\n\n    function gotMedia(mediaStream) {\n      const mediaStreamTrack = mediaStream.getVideoTracks()[0];\n      const imageCapture = new ImageCapture(mediaStreamTrack);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (postData.length > 0) {\n      localStorage.setItem(\"post\", JSON.stringify(postData));\n    }\n  }, [postData]);\n  useEffect(() => {\n    if (source) {\n      setOpenCommentModal(true);\n    }\n  }, [source]);\n\n  const uploadImage = (blob) => {\n    var reader = new FileReader();\n    reader.readAsDataURL(blob);\n    reader.onloadend = function () {\n      var base64data = reader.result;\n      setSource(base64data);\n    };\n    var newImg = document.createElement(\"img\"),\n      url = URL.createObjectURL(blob);\n    setSource(url);\n    newImg.onload = function () {\n      // no longer need to read the blob so it's revoked\n      URL.revokeObjectURL(url);\n    };\n    newImg.src = url;\n  };\n\n  const handleCancelComment = () => {\n    setOpenCommentModal(!openCommentModal);\n  };\n  const handleChange = (e) => {\n    setSaveComment(e.target.value);\n  };\n  const handleAddPost = async () => {\n    if (saveComment !== \"\") {\n      let postData = {\n        file: source,\n        comment: saveComment,\n      };\n      await dispatch(PostRequest(postData));\n      const allPostData = await JSON.parse(localStorage.getItem(\"post\"));\n      const newPostData = await allPostData?.length > 0 ? [...allPostData] : [];\n      await newPostData.push(postData);\n      await setPostData(newPostData);\n      await localStorage.setItem('post',JSON.stringify(newPostData))\n      await setOpenCommentModal(!openCommentModal);\n     await props.history.push(\"/\");\n    }\n  };\n  return (\n    <div>\n      <Comment\n        open={openCommentModal}\n        handleCancelComment={handleCancelComment}\n        handleChange={handleChange}\n        handleAddPost={handleAddPost}\n      />\n      <MenuBar />\n      <div>\n        <div className={classes.root}>\n          <Camera sendFile={uploadImage} />\n        </div>\n      </div>\n      {/* <canvas id='image_canvas'></canvas> */}\n    </div>\n  );\n};\n\nexport default Home;\n","/home/e-tech/Documents/pwa-app/src/components/MenuBar.js",[],"/home/e-tech/Documents/pwa-app/src/components/Posts.js",["91"],"/home/e-tech/Documents/pwa-app/src/redux/reducers/imagesReducer.js",[],"/home/e-tech/Documents/pwa-app/src/redux/saga/listPostSaga.js",[],"/home/e-tech/Documents/pwa-app/src/redux/saga/rootSaga.js",["92"],"/home/e-tech/Documents/pwa-app/src/components/Camera.js",[],"/home/e-tech/Documents/pwa-app/src/redux/saga/addPostSaga.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":51,"column":24,"nodeType":"101","messageId":"102","endLine":51,"endColumn":39},{"ruleId":"103","severity":1,"message":"104","line":81,"column":6,"nodeType":"105","endLine":81,"endColumn":8,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":83,"column":13,"nodeType":"108","endLine":100,"endColumn":4},{"ruleId":"109","severity":1,"message":"110","line":88,"column":27,"nodeType":"111","messageId":"112","endLine":88,"endColumn":29},{"ruleId":"103","severity":1,"message":"113","line":100,"column":6,"nodeType":"105","endLine":100,"endColumn":29,"suggestions":"114"},{"ruleId":"103","severity":1,"message":"107","line":102,"column":13,"nodeType":"108","endLine":111,"endColumn":4},{"ruleId":"103","severity":1,"message":"115","line":111,"column":6,"nodeType":"105","endLine":111,"endColumn":24,"suggestions":"116"},{"ruleId":"99","severity":1,"message":"117","line":6,"column":23,"nodeType":"101","messageId":"102","endLine":6,"endColumn":34},{"ruleId":"99","severity":1,"message":"118","line":53,"column":13,"nodeType":"101","messageId":"102","endLine":53,"endColumn":25},{"ruleId":"119","severity":1,"message":"120","line":28,"column":27,"nodeType":"121","endLine":32,"endColumn":13},{"ruleId":"122","severity":1,"message":"123","line":7,"column":3,"nodeType":"124","messageId":"125","endLine":9,"endColumn":4},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],["126"],["127"],"no-unused-vars","'setOfflineError' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'page'. Either include them or remove the dependency array.","ArrayExpression",["128"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'allPostList', 'imageUrl?.data', and 'isOnline'. Either include them or remove the dependency array.",["129"],"React Hook useEffect has missing dependencies: 'allPostList', 'dispatch', 'isOnline', and 'postDataStatus.isLoading'. Either include them or remove the dependency array.",["130"],"'useSelector' is defined but never used.","'imageCapture' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [dispatch, page]",{"range":"137","text":"138"},"Update the dependencies array to be: [allPostList, imageUrl?.data, imageUrl?.data.length, isOnline]",{"range":"139","text":"140"},"Update the dependencies array to be: [allPostList, allPostList.data, dispatch, isOnline, postDataStatus.isLoading]",{"range":"141","text":"142"},[2378,2380],"[dispatch, page]",[2961,2984],"[allPostList, imageUrl?.data, imageUrl?.data.length, isOnline]",[3278,3296],"[allPostList, allPostList.data, dispatch, isOnline, postDataStatus.isLoading]"]